setwd("~/Desktop/Machine_Learning_Algorithms_R/Part 3 - Classification/Section 15 - K-Nearest Neighbors (K-NN)")
# Importing the dataset
dataset = read.csv('Social_Network_Ads.csv')
dataset = dataset[3:5]
# Encoding the target feature as factor
dataset$Purchased = factor(dataset$Purchased, levels = c(0, 1))
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# Feature Scaling
training_set[-3] = scale(training_set[-3])
test_set[-3] = scale(test_set[-3])
install.packages('class')
library(class)
View(dataset)
View(dataset)
y_pred = knn(train = training_set[, -3],
test = test_set[, -3],
cl = training_set[, 3],
k = 5)
y_pred
View(test_set)
cm = table(test_set[, 3], y_pred)
cm
set = test_set
expand.grid('Age' = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01),#taking the range of the training set observation points for Age and Salary
'EstimatedSalary' = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01))%>%
mutate(prob_set=knn(train = training_set[, -3],
test = set[, -3],
cl = training_set[, 3],
k = 5),#predicting the result of the graph using the classifier
y_grid = ifelse(prob_set > 0.5, 1, 0))%>%#transforming the predictions
ggplot()+
geom_point(aes(x=Age, y=EstimatedSalary, color=ifelse(y_grid == 1,y_grid-0.2, -y_grid-0.2)))+
geom_point(data=test_set, aes(x=Age, y=EstimatedSalary,colour=as.numeric(Purchased)+0.5))
set = training_set
expand.grid('Age' = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01),
'EstimatedSalary' = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01))%>%
mutate(prob_set=knn(train = training_set[, -3],
test = set[, -3],
cl = training_set[, 3],
k = 5),
y_grid = ifelse(prob_set > 0.5, 1, 0))%>%
ggplot()+
geom_point(aes(x=Age, y=EstimatedSalary, color=ifelse(y_grid == 1,y_grid-0.2, -y_grid-0.2)))+
geom_point(data=training_set, aes(x=Age, y=EstimatedSalary,colour=as.numeric(Purchased)+0.5))
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)
expand.grid('Age' = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01),
'EstimatedSalary' = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01))%>%
mutate(prob_set=knn(train = training_set[, -3],
test = set[, -3],
cl = training_set[, 3],
k = 5),
y_grid = ifelse(prob_set > 0.5, 1, 0))%>%
ggplot()+
geom_point(aes(x=Age, y=EstimatedSalary, color=ifelse(y_grid == 1,y_grid-0.2, -y_grid-0.2)))+
geom_point(data=training_set, aes(x=Age, y=EstimatedSalary,colour=as.numeric(Purchased)+0.5))
set = training_set
expand.grid('Age' = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01),
'EstimatedSalary' = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01))%>%
mutate(prob_set=knn(train = training_set[, -3],
test = test_set[, -3],
cl = training_set[, 3],
k = 5),
y_grid = ifelse(prob_set > 0.5, 1, 0))%>%
ggplot()+
geom_point(aes(x=Age, y=EstimatedSalary, color=ifelse(y_grid == 1,y_grid-0.2, -y_grid-0.2)))+
geom_point(data=training_set, aes(x=Age, y=EstimatedSalary,colour=as.numeric(Purchased)+0.5))
prob_set=knn(train = training_set[, -3],
test = test_set[, -3],
cl = training_set[, 3],
k = 5)
prob_set
set = training_set
grid_set = expand.grid('Age' = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01),
'EstimatedSalary' = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01))
mutate(prob_set=knn(train = training_set[, -3],
test = grid_set,
cl = training_set[, 3],
k = 5),
y_grid = ifelse(prob_set > 0.5, 1, 0))%>%
ggplot()+
geom_point(aes(x=Age, y=EstimatedSalary, color=ifelse(y_grid == 1,y_grid-0.2, -y_grid-0.2)))+
geom_point(data=training_set, aes(x=Age, y=EstimatedSalary,colour=as.numeric(Purchased)+0.5))
grid_set = expand.grid('Age' = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01),
'EstimatedSalary' = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01))
mutate(grid_set,prob_set=knn(train = training_set[, -3],
test = grid_set,
cl = training_set[, 3],
k = 5),
y_grid = ifelse(prob_set > 0.5, 1, 0))%>%
ggplot()+
geom_point(aes(x=Age, y=EstimatedSalary, color=ifelse(y_grid == 1,y_grid-0.2, -y_grid-0.2)))+
geom_point(data=training_set, aes(x=Age, y=EstimatedSalary,colour=as.numeric(Purchased)+0.5))
library(ggplot2)
set = training_set
grid_set = expand.grid('Age' = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01),
'EstimatedSalary' = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01))
mutate(grid_set,prob_set=knn(train = training_set[, -3],
test = grid_set,
cl = training_set[, 3],
k = 5),
y_grid = ifelse(prob_set > 0.5, 1, 0))%>%
ggplot()+
geom_point(aes(x=Age, y=EstimatedSalary, color=ifelse(y_grid == 1,y_grid-0.2, -y_grid-0.2)))+
geom_point(data=training_set, aes(x=Age, y=EstimatedSalary,colour=as.numeric(Purchased)+0.5))
grid_set
mutate(grid_set,prob_set=knn(train = training_set[, -3],
test = grid_set,
cl = training_set[, 3],
k = 5),
y_grid = ifelse(prob_set > 0.5, 1, 0))%>%
ggplot()+
geom_point(aes(x=Age, y=EstimatedSalary, color=ifelse(y_grid == 1,y_grid-0.2, -y_grid-0.2)))+
geom_point(data=training_set, aes(x=Age, y=EstimatedSalary,colour=as.numeric(Purchased)+0.5))
y_grid = knn(train = training_set[, -3],
test = grid_set,
cl = training_set[, 3],
k = 5)
X1 = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01)
X2 = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01)
grid_set = expand.grid('Age' = X1,
'EstimatedSalary' = X2)
y_grid = knn(train = training_set[, -3],
test = grid_set,
cl = training_set[, 3],
k = 5)
plot (set[, -3],
main = 'K-NN (Training set)',
xlib = 'Age',
ylib = 'Estimated Salary',
xlim = range(X1),
ylim = range(X2))
plot (set[, -3],
main = 'K-NN (Training set)',
xlib = 'Age',
ylib = 'Estimated Salary',
xlim = range(X1),
ylim = range(X2))
ggplot()+
geom_point(aes(x=Age, y=EstimatedSalary, color=ifelse(y_grid == 1,y_grid-0.2, -y_grid-0.2)))+
geom_point(data=training_set, aes(x=Age, y=EstimatedSalary,colour=as.numeric(Purchased)+0.5))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2), add = TRUE))
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'green', 'red'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
plot (set[, -3],
main = 'K-NN (Training set)',
xlib = 'Age',
ylib = 'Estimated Salary',
xlim = range(X1),
ylim = range(X2))
ggplot()+
geom_point(aes(x=Age, y=EstimatedSalary, color=ifelse(y_grid == 1,y_grid-0.2, -y_grid-0.2)))+
geom_point(data=training_set, aes(x=Age, y=EstimatedSalary,colour=as.numeric(Purchased)+0.5))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2), add = TRUE))
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
plot (set[, -3],
main = 'K-NN (Training set)',
xlib = 'Age',
ylib = 'Estimated Salary',
xlim = range(X1),
ylim = range(X2))
ggplot()+
geom_point(aes(x=Age, y=EstimatedSalary, color=ifelse(y_grid == 1,y_grid-0.2, -y_grid-0.2)))+
geom_point(data=training_set, aes(x=Age, y=EstimatedSalary,colour=as.numeric(Purchased)+0.5))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2), add = TRUE))
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
ggplot()+
geom_point(aes(x=Age, y=EstimatedSalary, color=ifelse(y_grid == 1,y_grid-0.2, -y_grid-0.2)))+
geom_point(data=training_set, aes(x=Age, y=EstimatedSalary,colour=as.numeric(Purchased)+0.5))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2), add = TRUE))
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
plot (set[, -3],
main = 'K-NN (Training set)',
xlib = 'Age',
ylib = 'Estimated Salary',
xlim = range(X1),
ylim = range(X2))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2), add = TRUE))
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
set = test_set
X1 = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01)
X2 = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01)
grid_set = expand.grid('Age' = X1,
'EstimatedSalary' = X2)
y_grid = knn(train = training_set[, -3],
test = grid_set,
cl = training_set[, 3],
k = 5)
plot (set[, -3],
main = 'K-NN (Training set)',
xlib = 'Age',
ylib = 'Estimated Salary',
xlim = range(X1),
ylim = range(X2))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2), add = TRUE))
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
set = test_set
X1 = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01)
X2 = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01)
grid_set = expand.grid('Age' = X1,
'EstimatedSalary' = X2)
y_grid = knn(train = training_set[, -3],
test = grid_set,
cl = training_set[, 3],
k = 5)
plot (set[, -3],
main = 'K-NN (Test set)',
xlib = 'Age',
ylib = 'Estimated Salary',
xlim = range(X1),
ylim = range(X2))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2), add = TRUE))
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
setwd("~/Desktop/Machine_Learning_Algorithms_R/Part 3 - Classification/Section 15 - K-Nearest Neighbors (K-NN)")
