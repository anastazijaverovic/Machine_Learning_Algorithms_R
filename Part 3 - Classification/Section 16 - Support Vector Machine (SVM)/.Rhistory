setwd("~/Desktop/Machine_Learning_Algorithms_R/Part 3 - Classification/Section 16 - Support Vector Machine (SVM)")
library(e1071)
library('e1071')
library(e1071)
dataset = read.csv('Social_Network_Ads.csv')
dataset = dataset[3:5]
dataset$Purchased = factor(dataset$Purchased, levels = c(0, 1))
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
training_set[-3] = scale(training_set[-3])
test_set[-3] = scale(test_set[-3])
classifier = svm(formula = Purchased ~ .,
data = training_set,
type = 'C-classification',
kernel = 'linear')
classifier
y_pred = predict(classifier, newdata = test_set[-3])
y_pred = predict(classifier, newdata = test_set[-3])
View(test_set)
y_pred
cm = table(test_set[, 3], y_pred)
cm
set = training_set
X1 = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01)
X2 = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01)
grid_set = expand.grid('Age' = X1,
'EstimatedSalary' = X2)
y_grid = knn(train = training_set[, -3],
test = grid_set,
cl = training_set[, 3],
k = 5)
plot (set[, -3],
main = 'SVM (Training set)',
xlib = 'Age',
ylib = 'Estimated Salary',
xlim = range(X1),
ylim = range(X2))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2), add = TRUE))
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
set = test_set
X1 = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01)
X2 = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01)
grid_set = expand.grid('Age' = X1,
'EstimatedSalary' = X2)
y_grid = knn(train = training_set[, -3],
test = grid_set,
cl = training_set[, 3],
k = 5)
plot (set[, -3],
main = 'SVM (Test set)',
xlib = 'Age',
ylib = 'Estimated Salary',
xlim = range(X1),
ylim = range(X2))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2), add = TRUE))
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
set = training_set
X1 = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01)
X2 = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01)
grid_set = expand.grid('Age' = X1,
'EstimatedSalary' = X2)
y_grid = knn(train = training_set[, -3],
test = grid_set,
cl = training_set[, 3],
k = 5)
plot (set[, -3],
main = 'SVM (Training set)',
xlib = 'Age',
ylib = 'Estimated Salary',
xlim = range(X1),
ylim = range(X2))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2), add = TRUE))
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
X1 = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01)
X2 = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01)
grid_set = expand.grid('Age' = X1,
'EstimatedSalary' = X2)
y_grid = knn(train = training_set[, -3],
test = grid_set,
cl = training_set[, 3],
k = 5)
plot (set[, -3],
main = 'K-NN (Test set)',
xlib = 'Age',
ylib = 'Estimated Salary',
xlim = range(X1),
ylim = range(X2))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2), add = TRUE))
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
plot (set[, -3],
main = 'SVM (Test set)',
xlib = 'Age',
ylib = 'Estimated Salary',
xlim = range(X1),
ylim = range(X2))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2), add = TRUE))
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
y_grid = knn(train = training_set[, -3],
test = grid_set,
cl = training_set[, 3],
k = 5)
plot (set[, -3],
main = 'SVM (Test set)',
xlib = 'Age',
ylib = 'Estimated Salary',
xlim = range(X1),
ylim = range(X2))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2), add = TRUE))
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
grid_set = expand.grid('Age' = X1,
'EstimatedSalary' = X2)
y_grid = knn(train = training_set[, -3],
test = grid_set,
cl = training_set[, 3],
k = 5)
plot (set[, -3],
main = 'SVM (Test set)',
xlib = 'Age',
ylib = 'Estimated Salary',
xlim = range(X1),
ylim = range(X2))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2), add = TRUE))
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
X1 = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01)
X2 = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01)
grid_set = expand.grid('Age' = X1,
'EstimatedSalary' = X2)
y_grid = knn(train = training_set[, -3],
test = grid_set,
cl = training_set[, 3],
k = 5)
plot (set[, -3],
main = 'SVM (Test set)',
xlib = 'Age',
ylib = 'Estimated Salary',
xlim = range(X1),
ylim = range(X2))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2), add = TRUE))
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
set = test_set
X1 = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01)
X2 = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01)
grid_set = expand.grid('Age' = X1,
'EstimatedSalary' = X2)
y_grid = knn(train = training_set[, -3],
test = grid_set,
cl = training_set[, 3],
k = 5)
plot (set[, -3],
main = 'SVM (Test set)',
xlib = 'Age',
ylib = 'Estimated Salary',
xlim = range(X1),
ylim = range(X2))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2), add = TRUE))
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
set = test_set
X1 = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01)
X2 = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01)
grid_set = expand.grid('Age' = X1,
'EstimatedSalary' = X2)
y_grid = knn(train = training_set[, -3],
test = grid_set,
cl = training_set[, 3],
k = 5)
plot (set[, -3],
main = 'SVM (Test set)',
xlib = 'Age',
ylib = 'Estimated Salary',
xlim = range(X1),
ylim = range(X2))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2), add = TRUE))
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
set = training_set
X1 = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01)
X2 = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01)
grid_set = expand.grid('Age' = X1,
'EstimatedSalary' = X2)
y_grid = svm(formula = Purchased ~ .,
data = training_set,
type = 'C-classification',
kernel = 'linear')
plot (set[, -3],
main = 'SVM (Training set)',
xlib = 'Age',
ylib = 'Estimated Salary',
xlim = range(X1),
ylim = range(X2))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2), add = TRUE))
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
View(y_grid)
y_grid
plot (set[, -3],
main = 'SVM (Training set)',
xlib = 'Age',
ylib = 'Estimated Salary',
xlim = range(X1),
ylim = range(X2))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2), add = TRUE))
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
plot (set[, -3],
main = 'SVM (Test set)',
xlib = 'Age',
ylib = 'Estimated Salary',
xlim = range(X1),
ylim = range(X2))
plot (set[, -3],
main = 'SVM (Test set)',
xlib = 'Age',
ylib = 'Estimated Salary',
xlim = range(X1),
ylim = range(X2))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2), add = TRUE))
y_pred
set = training_set
X1 = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01)
X2 = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01)
grid_set = expand.grid('Age' = X1,
'EstimatedSalary' = X2)
y_grid = predict(classifier, newdata = grid_set)
plot (set[, -3],
main = 'SVM (Training set)',
xlib = 'Age',
ylib = 'Estimated Salary',
xlim = range(X1),
ylim = range(X2))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2), add = TRUE))
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
set = test_set
X1 = seq(min(set[, 1]) - 1, max(set[, 1]) + 1, by = 0.01)
X2 = seq(min(set[, 2]) - 1, max(set[, 2]) + 1, by = 0.01)
grid_set = expand.grid('Age' = X1,
'EstimatedSalary' = X2)
y_grid = predict(classifier, newdata = grid_set)
plot (set[, -3],
main = 'SVM (Test set)',
xlib = 'Age',
ylib = 'Estimated Salary',
xlim = range(X1),
ylim = range(X2))
contour(X1, X2, matrix(as.numeric(y_grid), length(X1), length(X2), add = TRUE))
points(grid_set, pch = '.', col = ifelse(y_grid == 1, 'springgreen3', 'tomato'))
points(set, pch = 21, bg = ifelse(set[, 3] == 1, 'green4', 'red3'))
